(this.webpackJsonparnavs_app=this.webpackJsonparnavs_app||[]).push([[0],{28:function(e,t,n){e.exports={tableWrapper:"Board_tableWrapper__3L-oJ",tableStyle:"Board_tableStyle__1hg4o"}},32:function(e,t,n){e.exports={navBar:"NavBar_navBar__36P4w"}},40:function(e,t,n){e.exports=n(51)},45:function(e,t,n){},48:function(e,t,n){},50:function(e,t,n){},51:function(e,t,n){"use strict";n.r(t);var a=n(0),r=n.n(a),o=n(18),i=n.n(o),s=(n(45),n(5)),l=n(6),c=n(10),u=n(9),h=n(55),d=(n(31),n(32)),p=n.n(d),m=function(e){Object(c.a)(n,e);var t=Object(u.a)(n);function n(){return Object(s.a)(this,n),t.apply(this,arguments)}return Object(l.a)(n,[{key:"render",value:function(){return r.a.createElement("div",null,r.a.createElement(h.a,{bg:"dark",variant:"dark"},r.a.createElement(h.a.Brand,{href:"#home"},r.a.createElement("link",{href:"https://fonts.googleapis.com/css2?family=Share+Tech+Mono&display=swap",rel:"stylesheet"}),r.a.createElement("img",{alt:"",src:"/maze.svg",width:"35",height:"35",className:"d-inline-block align-top"}),"  ",r.a.createElement("span",{className:p.a.navBar},"PATH FINDING VISUALISER "),r.a.createElement("small",{style:{color:"#ggg"}}," ")," ",r.a.createElement(h.a.Text,null,"Developed By: Arnav"),r.a.createElement("span",null,"\xa0\xa0")," Red Node is the Start",r.a.createElement("span",null,"\xa0\xa0"),r.a.createElement("span",null,"\xa0\xa0")," Green Node is the Target")))}}]),n}(a.Component),f=(n(48),function(e){Object(c.a)(n,e);var t=Object(u.a)(n);function n(){return Object(s.a)(this,n),t.apply(this,arguments)}return Object(l.a)(n,[{key:"shouldComponentUpdate",value:function(e,t){return this.props.type!==e.type}},{key:"getStyle",value:function(){return{display:"inline-block",outline:"1px solid black",height:"27px",padding:"0px",width:"27px"}}},{key:"getClass",value:function(){var e=this.props.type;return"regular"===e?"regular":"wall"===e?"walls":"start"===e?"start":"end"===e?"end":void 0}},{key:"render",value:function(){var e=this.props,t=e.row,n=e.column,a=e.type,o=e.onMouseDown,i=e.onMouseEnter,s=this.getClass();return r.a.createElement("td",{id:"node_".concat(t,"_").concat(n),className:s,style:this.getStyle(a),onMouseDown:function(){return o(t,n)},onMouseEnter:function(){return i(t,n)}})}}]),n}(a.Component)),v=n(28),y=n.n(v),g=function(e){Object(c.a)(n,e);var t=Object(u.a)(n);function n(){return Object(s.a)(this,n),t.apply(this,arguments)}return Object(l.a)(n,[{key:"render",value:function(){var e=this.props,t=e.nodes,n=e.onMouseDown,a=e.onMouseEnter;return r.a.createElement("div",{className:y.a.tableWrapper},r.a.createElement("table",{className:y.a.tableStyle},r.a.createElement("tbody",null,t.map((function(e,t){return r.a.createElement("tr",{key:t},e.map((function(e,t){var o=e.row,i=e.column,s=e.type;return r.a.createElement(f,{key:t,row:o,column:i,type:s,onMouseDown:function(e,t){return n(e,t)},onMouseEnter:function(e,t){return a(e,t)}})})))})))))}}]),n}(a.Component),w=n(54),b=n(58),E=n(35),k=n(59),j=n(56),M=n(53),O=n(36),D=n(57),S=function(e){Object(c.a)(n,e);var t=Object(u.a)(n);function n(){return Object(s.a)(this,n),t.apply(this,arguments)}return Object(l.a)(n,[{key:"render",value:function(){var e=this.props.changeAlgorithm;return r.a.createElement("div",null,r.a.createElement(E.a,null,r.a.createElement(b.a.Title,{style:{textAlign:"left"}},"1. Choose an Algorithm to Visualise"),r.a.createElement(j.a.Container,{id:"list-group-tabs-example",defaultActiveKey:"#bfs"},r.a.createElement(M.a,null,r.a.createElement(O.a,{sm:5},r.a.createElement(D.a,null,r.a.createElement(D.a.Item,{action:!0,href:"#astar",onClick:function(){e("astar")}},"A* Search"),r.a.createElement(D.a.Item,{action:!0,href:"#dijkstra",onClick:function(){e("dijkstra")}},"Dijkstra"),r.a.createElement(D.a.Item,{action:!0,href:"#bfs",onClick:function(){e("bfs")}},"Breadth First Search"))),r.a.createElement(O.a,{sm:7},r.a.createElement(j.a.Content,null,r.a.createElement(j.a.Pane,{eventKey:"#bfs"},"BFS is a traversing algorithm where you should start from a selected node and traverse the graph layerwise thus exploring the neighbour nodes."," ",r.a.createElement("em",null,"Shortest path is guarenteed!")),r.a.createElement(j.a.Pane,{eventKey:"#dijkstra"},"One algorithm for finding the shortest path from a starting node to a target node in a weighted graph is Dijkstra\u2019s algorithm. The algorithm creates a tree of shortest paths from the starting vertex, the source, to all other points in the graph. This is what Google Maps uses."),r.a.createElement(j.a.Pane,{eventKey:"#astar"},"A* is an informed search algorithm, or a best-first search, meaning that it is formulated in terms of weighted graphs: starting from a specific starting node of a graph, it aims to find a path to the given goal node having the smallest cost.")))))))}}]),n}(a.Component),z=function(e){Object(c.a)(n,e);var t=Object(u.a)(n);function n(){return Object(s.a)(this,n),t.apply(this,arguments)}return Object(l.a)(n,[{key:"render",value:function(){var e=this.props.changeMaze;return r.a.createElement("div",null,r.a.createElement(E.a,null,r.a.createElement(b.a.Title,{style:{textAlign:"left"}},"2. Select Obstruction"),r.a.createElement(j.a.Container,{id:"list-group-tabs-example",defaultActiveKey:"#draw"},r.a.createElement(M.a,null,r.a.createElement(O.a,{sm:5},r.a.createElement(D.a,null,r.a.createElement(D.a.Item,{action:!0,href:"#draw",onClick:function(){e("draw")}},"Draw a Wall"),r.a.createElement(D.a.Item,{action:!0,href:"#simpleTerrain",onClick:function(){e("simpleTerrain")}},"Simple Terrain"),r.a.createElement(D.a.Item,{action:!0,href:"#recursiveDivision",onClick:function(){e("recursiveDivision")}},"Recursive Division"),r.a.createElement(D.a.Item,{action:!0,href:"#flappyBirdGrid",onClick:function(){e("flappyBirdGrid")}},"Flappy Bird Grid"))),r.a.createElement(O.a,{sm:7},r.a.createElement(j.a.Content,null,r.a.createElement(j.a.Pane,{eventKey:"#draw"},"Draw your own walls on the grid and the search algorithm will find its way around it!"),r.a.createElement(j.a.Pane,{eventKey:"#simpleTerrain"},"Randomized terrain covering about one-third of all nodes on the grid."),r.a.createElement(j.a.Pane,{eventKey:"#recursiveDivision"},"A maze will be generated using a divide and conquer approach."),r.a.createElement(j.a.Pane,{eventKey:"#flappyBirdGrid"},"Obstructions inspired from the Flappy Bird game (My favourite game so wanted to try this)")))))))}}]),n}(a.Component),N=function(e){Object(c.a)(n,e);var t=Object(u.a)(n);function n(){return Object(s.a)(this,n),t.apply(this,arguments)}return Object(l.a)(n,[{key:"render",value:function(){var e=this.props,t=e.visualize,n=e.reset,a=e.changeAlgorithm,o=e.changeMaze,i=e.buttonDisable;return r.a.createElement(w.a,null,r.a.createElement(b.a,{bg:"dark",text:"light",style:{height:"815px"}},r.a.createElement(b.a.Header,{as:"h9"},"Scroll Down to Start Visualising"),r.a.createElement(b.a.Body,null,r.a.createElement(S,{changeAlgorithm:function(e){return a(e)}}),r.a.createElement(z,{changeMaze:function(e){return o(e)}}),r.a.createElement(E.a,{style:{float:"left"}},r.a.createElement(k.a,{onClick:function(){return t()},variant:"warning",size:"lg",disabled:i},"Visualize The Algorithm !")," ",r.a.createElement(k.a,{onClick:function(){return n()},variant:"danger",size:"lg",disabled:i},"Reset")," "))))}}]),n}(a.Component),C=n(12),B=function(e,t,n){for(var a=[],r=0;r<=t;r++)e[r][0].type="wall",e[r][n].type="wall",a.push(e[r][0]),a.push(e[r][n]);for(var o=0;o<=n;o++)e[0][o].type="wall",e[t][o].type="wall",a.push(e[0][o]),a.push(e[t][o]);return a},T=function e(t,n,a,r,o,i){var s,l,c=[];if(r<n||o<a)return[];if("horizontal"===i){for(var u=[],h=n;h<=r;h+=2)u.push(h);for(var d=[],p=a-1;p<=o+1;p+=2)d.push(p);for(var m=u[Math.floor(Math.random()*u.length)],f=d[Math.floor(Math.random()*d.length)],v=a-1;v<=o+1;v++)v!==f&&"start"!==t[m][v].type&&"end"!==t[m][v].type&&(t[m][v].type="wall",c.push(t[m][v]));return s=e(t,n,a,m-2,o,m-n-2>o-a?"horizontal":"vertical"),l=e(t,m+2,a,r,o,r-m-2>o-a?"horizontal":"vertical"),[].concat(c,Object(C.a)(s),Object(C.a)(l))}for(var y=[],g=n-1;g<=r+1;g+=2)y.push(g);for(var w=[],b=a;b<=o;b+=2)w.push(b);for(var E=w[Math.floor(Math.random()*w.length)],k=y[Math.floor(Math.random()*y.length)],j=n-1;j<=r+1;j++)j!==k&&"start"!==t[j][E].type&&"end"!==t[j][E].type&&(t[j][E].type="wall",c.push(t[j][E]));return s=e(t,n,a,r,E-2,r-n>E-a-2?"horizontal":"vertical"),l=e(t,n,E+2,r,o,r-n>o-E-2?"horizontal":"vertical"),[].concat(c,Object(C.a)(s),Object(C.a)(l))},A=function(e,t,n){for(var a=[],r=0;r<=t;r++)e[r][0].type="wall",e[r][n].type="wall",a.push(e[r][0]),a.push(e[r][n]);for(var o=0;o<=n;o++)e[0][o].type="wall",e[t][o].type="wall",a.push(e[0][o]),a.push(e[t][o]);return a},_=function(e,t,n){for(var a=[],r=0;r<=t;r++)e[r][0].type="wall",e[r][n].type="wall",a.push(e[r][0]),a.push(e[r][n]);for(var o=0;o<=n;o++)e[0][o].type="wall",e[t][o].type="wall",a.push(e[0][o]),a.push(e[t][o]);return a},x=function(){function e(t,n,a,r,o,i){Object(s.a)(this,e),this.nodes=t,this.startX=n,this.startY=a,this.endX=r,this.endY=o,this.axis=i}return Object(l.a)(e,[{key:"recursiveDivision",value:function(){return function(e,t,n,a,r,o){var i=B(e,a,r),s=T(e,t+2,n+2,a-2,r-2,o);return{newNodes:e,drawnNodes:[].concat(Object(C.a)(i),Object(C.a)(s))}}(this.nodes,this.startX,this.startY,this.endX,this.endY,this.axis)}},{key:"simpleTerrain",value:function(){return function(e,t,n){var a=A(e,t,n),r=[];return e.forEach((function(e){e.forEach((function(e){Math.floor(100*Math.random()+1)<33&&"start"!==e.type&&"end"!==e.type&&(e.type="wall",r.push(e))}))})),{nodes:e,drawnNodes:[].concat(Object(C.a)(a),r)}}(this.nodes,this.endX,this.endY)}},{key:"flappyBirdGrid",value:function(){return function(e,t,n){for(var a=_(e,t,n),r=[],o=2;o<n;o+=2)for(var i=1+Math.floor(Math.random()*(t-1)),s=0;s<t;s++)s!==i&&"start"!==e[s][o].type&&"end"!==e[s][o].type&&(e[s][o].type="wall",r.push(e[s][o]));return{nodes:e,drawnNodes:[].concat(Object(C.a)(a),r)}}(this.nodes,this.endX,this.endY)}}]),e}(),I=function(){function e(){Object(s.a)(this,e),this.elements=[]}return Object(l.a)(e,[{key:"enqueue",value:function(e){this.elements.push(e)}},{key:"dequeue",value:function(){return this.elements.shift()}},{key:"isEmpty",value:function(){return 0===this.elements.length}}]),e}(),P=function(e,t,n){var a=new I;a.enqueue(e);var r,o=[];n[e.row][e.column].isVisited=!0;for(var i=!1;!a.isEmpty()&&(r=a.dequeue(),V(r,n).forEach((function(e){if(!e.isVisited){if(e.row===t.row&&e.column===t.column)return e.isVisited=!0,e.prev=r,void(i=!0);console.log("1"),a.enqueue(e),o.push(e),e.isVisited=!0,e.prev=r}})),!i););return o},G=function(e,t,n){for(var a=[],r=t;null!==r;r=r.prev)a.push(r);return a.reverse(),a[0]===e?(a.shift(),a.pop(),a):[]},V=function(e,t){var n=[],a=e.row,r=e.column;return a>0&&n.push(t[a-1][r]),a<t.length-1&&n.push(t[a+1][r]),r>0&&n.push(t[a][r-1]),r<t[0].length-1&&n.push(t[a][r+1]),n.filter((function(e){return!e.isVisited&&"wall"!==e.type}))},K=function(){function e(t,n,a){Object(s.a)(this,e),this.start=t,this.end=n,this.nodes=a}return Object(l.a)(e,[{key:"breadthFirstSearch",value:function(){return function(e,t,n){var a=n.slice();return{visitedNodes:P(e,t,n),path:G(e,t,a)}}(this.start,this.end,this.nodes)}}]),e}(),q=function(e){Object(c.a)(n,e);var t=Object(u.a)(n);function n(){var e;return Object(s.a)(this,n),(e=t.call(this)).state={nodes:[],isMouseDown:!1,mode:"draw",algorithm:"bfs",maze:"draw",buttonDisable:!1},e}return Object(l.a)(n,[{key:"componentDidMount",value:function(){this.reset()}},{key:"handleMouseDown",value:function(e,t){var n=this.state.nodes.slice();"regular"===n[e][t].type?(n[e][t].type="wall",this.setState({nodes:n,isMouseDown:!0,mode:"draw"})):"wall"===n[e][t].type&&(n[e][t].type="regular",this.setState({nodes:n,isMouseDown:!0,mode:"erase"}))}},{key:"handleMouseEnter",value:function(e,t){if(this.state.isMouseDown){var n=this.state.nodes.slice();"draw"===this.state.mode&&"regular"===n[e][t].type?n[e][t].type="wall":"erase"===this.state.mode&&"wall"===n[e][t].type&&(n[e][t].type="regular"),this.setState({nodes:n})}}},{key:"handleMouseUp",value:function(){this.setState({isMouseDown:!1})}},{key:"changeAlgorithm",value:function(e){this.setState({algorithm:e})}},{key:"changeMaze",value:function(e){this.setState({maze:e})}},{key:"drawMaze",value:function(){var e=this.state.nodes.slice(),t=this.state.maze,n=new x(e,0,0,19,39,"horizontal");if("draw"!==t){for(var a,r="simpleTerrain"===t?n.simpleTerrain():"recursiveDivision"===t?n.recursiveDivision():"flappyBirdGrid"===t?n.flappyBirdGrid():{},o=(r.newNodes,r.drawnNodes),i=function(e){setTimeout((function(){a=o[e],document.getElementById("node_".concat(a.row,"_").concat(a.column)).className="walls"}),6*e)},s=0;s<o.length;s++)i(s);return 6*o.length}}},{key:"drawSearchPath",value:function(){for(var e,t=this.state.nodes,n=t[14][2],a=t[3][22],r=new K(n,a,t).breadthFirstSearch(n,a,t),o=r.path,i=r.visitedNodes,s=function(t){setTimeout((function(){e=i[t],document.getElementById("node_".concat(e.row,"_").concat(e.column)).className="visited"}),5*t)},l=0;l<i.length;l++)s(l);return setTimeout((function(){for(var t=function(t){setTimeout((function(){e=o[t],document.getElementById("node_".concat(e.row,"_").concat(e.column)).className="shortest-path"}),30*t)},n=0;n<o.length;n++)t(n)}),5*i.length),5*i.length+30*o.length}},{key:"reset",value:function(){var e=F();e.forEach((function(e){return e.type="regular"})),document.querySelectorAll("[id^='node']").forEach((function(e){"walls"!==e.className&&"shortest-path"!==e.className&&"visited"!==e.className||(e.className="regular")})),e[14][2].type="start",e[3][22].type="end",this.setState({nodes:e})}},{key:"visualize",value:function(){var e=this;this.setState({buttonDisable:!0}),setTimeout((function(){var t=e.drawMaze();setTimeout((function(){var t=e.drawSearchPath();setTimeout((function(){e.setState({buttonDisable:!1})}),t+200)}),t+500)}),1100)}},{key:"render",value:function(){var e=this,t=this.state,n=t.nodes,a=t.isMouseDown,o=t.buttonDisable;return r.a.createElement("div",{onMouseUp:function(){return e.handleMouseUp()}},r.a.createElement(m,null),r.a.createElement(M.a,null,r.a.createElement(O.a,{lg:8},r.a.createElement(g,{nodes:n,isMouseDown:a,onMouseDown:function(t,n){return e.handleMouseDown(t,n)},onMouseEnter:function(t,n){return e.handleMouseEnter(t,n)}})),r.a.createElement(O.a,{lg:4},r.a.createElement(N,{buttonDisable:o,visualize:function(){return e.visualize()},reset:function(){return e.reset()},changeAlgorithm:function(t){return e.changeAlgorithm(t)},changeMaze:function(t){return e.changeMaze(t)}}))))}}]),n}(a.Component),F=function(){for(var e=[],t=0;t<20;t++){for(var n=[],a=0;a<40;a++)n.push(W(t,a));e.push(n)}return e},W=function(e,t){return{row:e,column:t,type:"regular",isVisited:!1,prev:null,dist:1/0}},X=q,Y=(n(50),function(e){Object(c.a)(n,e);var t=Object(u.a)(n);function n(){return Object(s.a)(this,n),t.apply(this,arguments)}return Object(l.a)(n,[{key:"render",value:function(){return r.a.createElement("div",{className:"App"},r.a.createElement(X,null))}}]),n}(a.Component));Boolean("localhost"===window.location.hostname||"[::1]"===window.location.hostname||window.location.hostname.match(/^127(?:\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));i.a.render(r.a.createElement(r.a.StrictMode,null,r.a.createElement(Y,null)),document.getElementById("root")),"serviceWorker"in navigator&&navigator.serviceWorker.ready.then((function(e){e.unregister()})).catch((function(e){console.error(e.message)}))}},[[40,1,2]]]);
//# sourceMappingURL=main.eed0a58f.chunk.js.map